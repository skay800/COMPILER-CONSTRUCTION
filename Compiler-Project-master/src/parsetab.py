
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDEQUAL ANDNOT ANDNOTEQUAL AUTOASIGN BOOL BREAK BYTE CASE CHARACTER CLOSEFILE COLON COMMA CONST CONTINUE COS DECR DEFAULT DEFER DIVEQUAL DIVIDE ELLIPSIS ELSE EQ EQUALS ERROR FALLTHROUGH FALSE FLOAT FLOAT32 FLOAT64 FOR FUNC GE GOTO GT ID IF IMPORT INCR INT INT16 INT32 INT64 INT8 INTEGER INTERFACE IOTA LAND LBRACE LBRACKET LE LNOT LOR LPAREN LSHIFT LSHIFTEQUAL LT MALLOC MAP MINUS MINUSEQUAL MODEQUAL MODULO NE NIL NOT NULL OPENFILE OR OREQUAL PACKAGE PERIOD PLUS PLUSEQUAL PRINTFLOAT PRINTINT PRINTSTR RANGE RBRACE RBRACKET READFILE RETURN RPAREN RSHIFT RSHIFTEQUAL SCANINT SCANSTR SEMI SIN STRING STRINGVAL STRUCT SWITCH TIMES TIMESEQUAL TRUE TYPE UINT UINT16 UINT32 UINT64 UINT8 UINTPTR VAR WRITEFILE XOR XOREQUAL newline\n    Start : SourceFile\n    \n    SourceFile : RepeatNewline PackageClause ImportClause A RepeatTopLevelDecl\n    \n    A : empty\n    \n    PackageClause : PACKAGE PackageName StatementEnd\n    \n    PackageName : ID\n    \n    ImportClause : ImportStmt StatementEnd ImportClause\n                 | empty\n    \n    ImportStmt : IMPORT Import\n               | IMPORT LPAREN StatementEnd ImportList RPAREN\n    \n    ImportList : Import StatementEnd ImportList\n               | Import StatementEnd\n               | Import\n    \n    Import : ID STRINGVAL\n           | STRINGVAL\n    \n    RepeatTopLevelDecl : TopLevelDecl StatementEnd RepeatTopLevelDecl\n                       | TopLevelDecl\n                       | empty\n    \n    TopLevelDecl : Declaration\n                 | FunctionDecl\n    \n    StatementList : Statement StatementEnd StatementList\n                  | Statement\n                  | empty\n    \n    Statement : Declaration\n              | LabeledStmt\n              | SimpleStmt\n              | ReturnStmt\n              | BreakStmt\n              | ContinueStmt\n              | FallthroughStmt\n              | GotoStmt\n              | Block\n              | IfStmt\n              | SwitchStmt\n              | ForStmt\n              | DeferStmt\n              | PrintStmt\n              | ScanIntStmt\n              | ScanStrStmt\n    \n    Declaration : ConstDecl\n                | TypeDecl\n                | VarDecl\n    \n    ConstDecl : CONST ConstSpec\n    \n    ConstSpec : IdentifierList Types\n              | IdentifierList Types EQUALS ExpressionList\n    \n    TypeDecl : TYPE RepeatNewline TypeSpec\n    \n    TypeSpec : TypeDef\n    \n    TypeDef : ID K Types\n    \n    K : empty\n    \n    VarDecl : VAR RepeatNewline VarSpec\n    \n    VarSpec : IdentifierList Types\n            | IdentifierList Types EQUALS RepeatNewline ExpressionList\n    \n    FunctionDecl : FunctionMarker  FunctionBody\n                 | FunctionMarker\n    \n    FunctionMarker : FUNC RepeatNewline FunctionName Signature\n    \n    FunctionName : ID\n    \n    Signature : Parameters\n              | Parameters Result\n    \n    Parameters : LPAREN RepeatNewline RPAREN\n               | LPAREN RepeatNewline ParameterList RPAREN\n    \n    ParameterList : ParameterDecl RepeatParameterDecl\n    \n    RepeatParameterDecl : COMMA RepeatNewline ParameterDecl RepeatParameterDecl\n                        | empty\n    \n    ParameterDecl : ID Types\n                  | Types\n    \n    Result :  Types\n    \n    FunctionBody : Block\n    \n    LabeledStmt : Label COLON RepeatNewline Statement\n    \n    Label : ID\n    \n    SimpleStmt : Assignment\n               | ShortVarDecl\n               | IncDecStmt\n               | ExpressionStmt\n    \n    ExpressionStmt : Expression\n    \n    IncDecStmt : Expression INCR\n               | Expression DECR\n    \n    AssignOp : TIMESEQUAL\n             | DIVEQUAL\n             | MODEQUAL\n             | PLUSEQUAL\n             | MINUSEQUAL\n             | LSHIFTEQUAL\n             | RSHIFTEQUAL\n             | ANDEQUAL\n             | OREQUAL\n             | XOREQUAL\n    \n    Assignment : ExpressionList AssignOp RepeatNewline ExpressionList\n               | ExpressionList EQUALS RepeatNewline ExpressionList\n               | ExpressionList EQUALS MallocExp\n               | ExpressionList EQUALS SinExp\n               | ExpressionList EQUALS CosExp\n               | ExpressionList EQUALS OpenFileExp\n               | ReadFileExp\n               | WriteFileExp\n               | CloseFileExp\n               | ExpressionList EQUALS NULL\n\n    \n    ShortVarDecl : ID AUTOASIGN RepeatNewline Expression\n    \n    ReturnStmt : RETURN\n               | RETURN ExpressionList\n    \n    FallthroughStmt : FALLTHROUGH\n    \n    BreakStmt : BREAK\n              | BREAK Label\n    \n    ContinueStmt : CONTINUE\n                 | CONTINUE Label\n    \n    GotoStmt : GOTO Label\n    \n    Block : LBRACE RepeatNewline  StatementList RBRACE\n    \n    IfExp : IfMarker RepeatNewline Expression\n    \n    IfStmt : IF IfExp Block\n           | IF IfExp Block EndIfMarker ELSE ElseMarker Block\n           | IF IfExp Block EndIfMarker ELSE IfStmt\n    \n    IfMarker : empty\n    \n    EndIfMarker : empty\n    \n    ElseMarker : empty\n    \n    SwitchStmt : ExprSwitchStmt\n    \n    ExprSwitchStmt : SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE\n    \n    Exp_Inh : empty\n    \n    RepeatExprCaseClause : ExprCaseClause RepeatExprCaseClause\n                         | empty\n    \n    ExprCaseClause : ExprSwitchCase COLON RepeatNewline StatementList\n    \n    ExprSwitchCase : CASE CaseMarker RepeatNewline Expression\n                   | DEFAULT  DefaultMarker RepeatNewline\n    \n    CaseMarker : empty\n    \n    DefaultMarker : empty\n    \n    ForStmt : FOR ForMarker RepeatNewline Block\n            | FOR ForMarker RepeatNewline Condition Block\n            | FOR ForMarker RepeatNewline ForClause Block\n    \n    ForMarker : empty\n    \n    ForClause : terminator terminator\n              | InitStmt terminator terminator\n              | terminator Condition terminator\n              | terminator terminator PostStmt\n              | InitStmt terminator Condition terminator\n              | InitStmt terminator terminator PostStmt\n              | terminator Condition terminator PostStmt\n              | InitStmt terminator Condition terminator PostStmt\n    \n    InitStmt : SimpleStmt\n    \n    PostStmt : SimpleStmt\n    \n    Condition : Expression\n    \n    DeferStmt : DEFER PrimaryExpr Arguments\n    \n    PrintStmt : PrintIntStmt\n              | PrintStrStmt\n              | PrintFloatStmt\n    \n    PrintIntStmt : PRINTINT Expression\n    \n    PrintFloatStmt : PRINTFLOAT Expression\n    \n    PrintStrStmt : PRINTSTR Expression\n    \n    ScanIntStmt : SCANINT Expression\n    \n    ScanStrStmt : SCANSTR Expression\n    \n    ExpressionList : Expression\n                   | Expression COMMA RepeatNewline ExpressionList\n    \n    Expression : Expression LOR RepeatNewline Term1\n               | Term1\n    \n    Term1 : Term1 LAND RepeatNewline Term2\n          | Term2\n    \n    Term2 : Term2 Relop RepeatNewline Term3\n          | Term3\n    \n    Relop : LT\n          | GT\n          | LE\n          | GE\n          | EQ\n          | NE\n    \n    Term3 : Term3 PLUS RepeatNewline Term4\n          | Term3 MINUS RepeatNewline Term4\n          | Term3 OR RepeatNewline Term4\n          | Term3 XOR RepeatNewline Term4\n          | NULL\n          | Term4\n    \n    Term4 : Term4 TIMES RepeatNewline Term5\n          | Term4 DIVIDE RepeatNewline Term5\n          | Term4 MODULO RepeatNewline Term5\n          | Term4 LSHIFT RepeatNewline Term5\n          | Term4 RSHIFT RepeatNewline Term5\n          | Term4 AND RepeatNewline Term5\n          | Term4 ANDNOT RepeatNewline Term5\n          | Term5\n    \n    Term5 : UnaryExp\n    \n    UnaryExp : PrimaryExpr\n             | Literal\n             | UnaryOp RepeatNewline UnaryExp\n    \n    UnaryOp : PLUS\n            | MINUS\n            | LNOT\n            | TIMES\n            | AND\n    \n    PrimaryExpr : OperandName2\n                | PrimaryExpr Selector\n                | PrimaryExpr Index\n                | PrimaryExpr Arguments\n                |  LPAREN RepeatNewline Expression RPAREN\n    \n    Literal : BasicLit\n            | CompositeLit\n    \n    BasicLit : intLit\n             | floatLit\n             | stringLit\n    \n    intLit : INTEGER\n    \n    floatLit : FLOAT\n    \n    stringLit : STRINGVAL\n              | CHARACTER\n    \n    CompositeLit : LiteralType LiteralValue\n    \n    LiteralType : ArrayType\n                | StructType\n                | SliceType\n    \n    Mytypes : BOOL\n            | BYTE\n            | INT\n            | UINT8\n            | UINT16\n            | UINT32\n            | UINT64\n            | INT8\n            | INT16\n            | INT32\n            | INT64\n            | UINT\n            | FLOAT32\n            | FLOAT64\n            | UINTPTR\n            | STRING\n            | ERROR\n    \n    Types : Mytypes\n          | TypeLit\n          | OperandName\n    \n    TypeLit : StructType\n            | ArrayType\n            | PointerType\n            | SliceType\n    \n    SliceType : LBRACKET RBRACKET Types\n    \n    PointerType : TIMES Types\n    \n    StructType : STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE\n    \n    M : empty\n    \n    RepeatFieldDecl : FieldDecl StatementEnd RepeatFieldDecl\n                    | FieldDecl\n                    | empty\n    \n    FieldDecl : IdentifierList Types\n    \n    ArrayType : LBRACKET RepeatNewline ArrayLength RBRACKET Types\n    \n    ArrayLength : INTEGER\n    \n    LiteralValue : LBRACE RepeatNewline  RBRACE\n                 | LBRACE RepeatNewline ElementList RBRACE\n    \n    ElementList : KeyedElement RepeatKeyedElement\n    \n    RepeatKeyedElement : COMMA RepeatNewline KeyedElement RepeatKeyedElement\n                       | empty\n    \n    KeyedElement : Element\n    \n    Element : BasicLit\n    \n    OperandName : ID\n    \n    OperandName2 : ID\n    \n    Selector : PERIOD RepeatNewline ID\n    \n    Index : LBRACKET RepeatNewline Expression RBRACKET\n    \n    Arguments : LPAREN RepeatNewline ExpressionList RPAREN\n              | LPAREN RepeatNewline RPAREN\n    \n    IdentifierList : ID\n                   |  IdentifierList COMMA RepeatNewline ID\n    \n    MallocExp : MALLOC LPAREN Expression RPAREN\n    \n    OpenFileExp : OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN\n    \n    ReadFileExp : READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN\n    \n    WriteFileExp : WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN\n    \n    CloseFileExp : CLOSEFILE LPAREN Expression RPAREN\n    \n    SinExp : SIN LPAREN Expression RPAREN\n    \n    CosExp : COS LPAREN Expression RPAREN\n    \n    empty :\n    \n    terminator : SEMI\n    \n    StatementEnd : terminator StatementEnd\n                 | newline StatementEnd\n                 | terminator\n                 | newline\n    \n    RepeatNewline : newline RepeatNewline\n                  | empty\n    '
    
_lr_action_items = {'newline':([0,4,10,13,14,18,19,20,21,22,24,27,29,30,31,32,33,34,36,37,38,43,45,46,47,48,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,91,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,127,128,129,131,132,133,134,136,138,139,140,141,142,143,148,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,180,181,184,187,188,189,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,268,269,270,271,272,278,279,280,281,282,287,290,315,317,320,325,326,327,335,343,346,347,348,349,350,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,374,375,376,378,386,387,392,393,397,399,402,406,407,408,411,423,425,428,436,437,445,447,448,449,450,451,452,453,459,],[4,4,19,19,-5,19,19,-259,-8,19,-14,19,-18,-19,-39,-40,-41,-53,4,4,4,-13,-52,-66,4,-42,19,-43,4,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,-258,4,-45,-46,-49,-9,19,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-69,-70,-71,-72,-97,-100,-102,-99,-258,-113,-258,-176,-139,-140,-141,-73,-244,-92,-93,-94,-165,4,4,-150,-152,-154,-179,-166,-180,-182,-174,-183,-175,-177,4,-184,-189,-190,-181,-191,-192,-193,-194,-195,-196,-197,4,-229,-227,-50,-54,-56,4,-105,4,-98,-147,-244,4,4,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-101,-68,-103,-104,4,-110,4,-126,-185,-186,-187,4,4,4,-145,-74,-75,4,4,-146,4,-142,-144,-143,4,4,-155,-156,-157,-158,-159,-160,4,4,4,4,4,4,4,4,4,4,4,-198,4,-44,-226,-47,4,-57,-65,-88,-89,-90,-91,-95,-107,-138,-178,4,-58,-67,-86,-87,-123,-245,-248,-148,-149,-96,4,-188,-255,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-234,-51,-59,4,-124,-125,-246,-247,-237,4,19,-251,-256,-257,-109,-228,-233,-108,-258,-258,-114,4,4,-121,4,-122,-253,-254,-252,]),'PACKAGE':([0,3,4,5,8,],[-258,7,-258,-265,-264,]),'$end':([1,2,6,9,11,15,16,17,18,19,20,25,26,27,28,29,30,31,32,33,34,39,40,41,44,45,46,48,56,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,131,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,184,187,188,189,192,196,197,220,221,222,261,263,268,269,271,272,315,320,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,374,375,376,392,393,397,423,],[0,-1,-258,-258,-7,-258,-3,-258,-262,-263,-259,-4,-2,-16,-17,-18,-19,-39,-40,-41,-53,-6,-260,-261,-258,-52,-66,-42,-15,-43,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,-45,-46,-49,-176,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-227,-50,-54,-56,-105,-147,-244,-185,-186,-187,-198,-44,-226,-47,-57,-65,-178,-58,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-234,-51,-59,-246,-247,-237,-228,]),'ID':([4,5,7,8,12,18,19,20,35,36,37,38,40,41,42,47,49,50,51,52,53,57,59,87,90,92,96,121,123,124,126,127,129,130,135,137,143,144,145,146,148,154,156,157,159,162,166,178,179,183,185,186,189,190,193,194,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,223,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,264,270,273,275,276,277,288,289,291,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,317,318,319,320,323,328,329,330,331,339,351,353,373,376,378,388,391,404,405,409,415,416,420,421,424,431,436,443,447,448,449,456,457,],[-258,-265,14,-264,23,-262,-263,-259,50,-258,-258,-258,-260,-261,23,-258,60,-249,90,50,94,138,-258,60,-258,60,23,197,211,211,211,-258,-258,197,197,197,-258,197,197,197,-258,-179,-180,-182,-183,-258,-181,197,264,60,60,-48,60,-258,138,-258,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-258,-258,-258,-258,-258,-258,197,197,197,197,197,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,197,-250,-258,323,138,197,197,197,342,343,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,-258,60,197,-58,60,197,197,197,197,197,197,197,50,-59,-258,342,197,60,323,197,342,342,197,197,50,342,-258,197,-258,-258,-121,138,197,]),'RETURN':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,121,121,-258,121,-258,121,]),'BREAK':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,123,123,-258,123,-258,123,]),'CONTINUE':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,124,124,-258,124,-258,124,]),'FALLTHROUGH':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,125,125,-258,125,-258,125,]),'GOTO':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,126,126,-258,126,-258,126,]),'LBRACE':([4,5,8,18,19,20,34,40,41,47,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,117,118,119,120,129,131,136,139,140,141,142,151,152,153,155,158,160,161,163,164,165,167,168,169,170,171,172,173,174,175,176,177,180,181,184,188,189,193,194,196,197,214,217,218,220,221,222,227,228,261,265,268,271,272,275,278,279,280,281,282,289,297,315,320,326,327,334,336,337,338,342,343,346,347,348,349,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,374,376,385,388,392,393,397,406,407,408,410,412,413,414,415,416,423,429,430,431,444,447,452,453,456,459,],[-258,-265,-264,-262,-263,-259,47,-260,-261,-258,47,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,-258,-69,-70,-71,-72,-258,-176,-73,-92,-93,-94,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,262,-194,-195,-196,-197,-199,-200,-201,-258,-229,-227,-54,-56,47,-258,-147,-244,47,-258,-126,-185,-186,-187,-74,-75,-198,317,-226,-57,-65,47,-88,-89,-90,-91,-95,47,350,-178,-58,-86,-87,-106,47,47,-137,-244,-245,-248,-148,-149,-96,-188,-255,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-234,-59,-258,-127,-246,-247,-237,-251,-256,-257,47,-112,-130,-136,-129,-128,-228,-133,-132,-131,-134,-258,-253,-254,47,-252,]),'IF':([4,5,8,18,19,20,40,41,47,57,193,194,275,385,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,127,127,-258,127,127,-258,127,]),'FOR':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,129,129,-258,129,-258,129,]),'DEFER':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,130,130,-258,130,-258,130,]),'SCANINT':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,135,135,-258,135,-258,135,]),'SCANSTR':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,137,137,-258,137,-258,137,]),'CONST':([4,5,6,8,9,11,15,16,17,18,19,20,25,39,40,41,44,47,57,193,194,275,447,456,],[-258,-265,-258,-264,-258,-7,35,-3,-258,-262,-263,-259,-4,-6,-260,-261,35,-258,35,35,-258,35,-258,35,]),'TYPE':([4,5,6,8,9,11,15,16,17,18,19,20,25,39,40,41,44,47,57,193,194,275,447,456,],[-258,-265,-258,-264,-258,-7,36,-3,-258,-262,-263,-259,-4,-6,-260,-261,36,-258,36,36,-258,36,-258,36,]),'VAR':([4,5,6,8,9,11,15,16,17,18,19,20,25,39,40,41,44,47,57,193,194,275,447,456,],[-258,-265,-258,-264,-258,-7,37,-3,-258,-262,-263,-259,-4,-6,-260,-261,37,-258,37,37,-258,37,-258,37,]),'SWITCH':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,143,143,-258,143,-258,143,]),'PRINTINT':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,144,144,-258,144,-258,144,]),'PRINTSTR':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,145,145,-258,145,-258,145,]),'PRINTFLOAT':([4,5,8,18,19,20,40,41,47,57,193,194,275,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,146,146,-258,146,-258,146,]),'READFILE':([4,5,8,18,19,20,40,41,47,57,129,193,194,217,218,275,289,388,415,416,431,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,147,-258,147,-258,-258,-126,147,147,147,147,147,147,-258,147,]),'WRITEFILE':([4,5,8,18,19,20,40,41,47,57,129,193,194,217,218,275,289,388,415,416,431,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,149,-258,149,-258,-258,-126,149,149,149,149,149,149,-258,149,]),'CLOSEFILE':([4,5,8,18,19,20,40,41,47,57,129,193,194,217,218,275,289,388,415,416,431,447,456,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,150,-258,150,-258,-258,-126,150,150,150,150,150,150,-258,150,]),'NULL':([4,5,8,18,19,20,40,41,47,57,121,127,129,135,137,143,144,145,146,148,178,193,194,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,270,275,276,277,288,289,292,293,294,295,296,302,303,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,142,142,-258,-258,142,142,-258,142,142,142,-258,142,142,-258,-258,282,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-258,-258,-258,-258,-258,142,142,142,142,142,-258,-258,-155,-156,-157,-158,-159,-160,-258,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-258,142,-258,-258,-121,142,142,]),'LPAREN':([4,5,8,12,18,19,20,40,41,47,57,93,94,121,127,129,130,131,135,137,138,143,144,145,146,147,148,149,150,154,156,157,159,162,163,166,178,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,219,220,221,222,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,270,275,276,277,283,284,285,286,288,289,290,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,342,343,346,351,352,353,388,391,392,393,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,22,-262,-263,-259,-260,-261,-258,148,190,-55,148,-258,-258,148,225,148,148,-244,-258,148,148,148,237,-258,239,240,-179,-180,-182,-183,-258,-184,-181,148,148,-258,-244,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,225,-185,-186,-187,-258,-258,-258,-258,-258,148,148,148,148,148,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,148,-258,148,148,148,328,329,330,331,148,148,-187,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-244,-245,-248,148,-188,148,148,148,-246,-247,148,148,148,148,148,148,-258,148,-258,-258,-121,148,148,]),'PLUS':([4,5,8,18,19,20,40,41,47,57,121,127,129,131,135,137,138,142,143,144,145,146,148,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,178,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,220,221,222,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,270,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,319,328,329,330,331,339,342,343,346,351,352,353,356,357,358,359,360,361,362,363,364,365,366,367,368,388,391,392,393,397,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,154,154,-258,-258,-176,154,154,-244,-165,-258,154,154,154,-258,249,-179,-166,-180,-182,-174,-183,-175,-177,-258,-184,-189,-190,-181,-191,-192,-193,-194,-195,-196,-197,154,154,-258,-244,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-185,-186,-187,-258,-258,-258,-258,-258,154,154,154,154,154,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,154,-198,-258,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-178,154,154,154,154,154,154,-244,-245,-248,154,-188,154,249,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,154,154,-246,-247,-237,154,154,154,154,154,154,-258,154,-258,-258,-121,154,154,]),'MINUS':([4,5,8,18,19,20,40,41,47,57,121,127,129,131,135,137,138,142,143,144,145,146,148,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,178,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,220,221,222,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,270,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,319,328,329,330,331,339,342,343,346,351,352,353,356,357,358,359,360,361,362,363,364,365,366,367,368,388,391,392,393,397,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,156,156,-258,-258,-176,156,156,-244,-165,-258,156,156,156,-258,250,-179,-166,-180,-182,-174,-183,-175,-177,-258,-184,-189,-190,-181,-191,-192,-193,-194,-195,-196,-197,156,156,-258,-244,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-185,-186,-187,-258,-258,-258,-258,-258,156,156,156,156,156,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,156,-198,-258,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-178,156,156,156,156,156,156,-244,-245,-248,156,-188,156,250,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,156,156,-246,-247,-237,156,156,156,156,156,156,-258,156,-258,-258,-121,156,156,]),'LNOT':([4,5,8,18,19,20,40,41,47,57,121,127,129,135,137,143,144,145,146,148,154,156,157,159,162,166,178,193,194,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,270,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,166,166,-258,-258,166,166,-258,166,166,166,-258,-179,-180,-182,-183,-258,-181,166,166,-258,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-258,-258,-258,-258,-258,166,166,166,166,166,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,166,-258,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-258,166,-258,-258,-121,166,166,]),'TIMES':([4,5,8,18,19,20,40,41,47,49,50,57,87,90,92,121,127,129,131,135,137,138,143,144,145,146,148,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,178,183,185,186,189,190,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,220,221,222,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,264,270,273,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,318,319,320,323,328,329,330,331,339,342,343,346,351,352,353,357,358,359,360,361,362,363,364,365,366,367,368,376,378,388,391,392,393,397,404,405,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,87,-249,157,87,-258,87,157,-258,-258,-176,157,157,-244,-258,157,157,157,-258,-179,253,-180,-182,-174,-183,-175,-177,-258,-184,-189,-190,-181,-191,-192,-193,-194,-195,-196,-197,157,87,87,-48,87,-258,157,-258,-244,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-185,-186,-187,-258,-258,-258,-258,-258,157,157,157,157,157,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,157,-198,-250,-258,87,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-178,87,157,-58,87,157,157,157,157,157,-244,-245,-248,157,-188,157,253,253,253,253,-167,-168,-169,-170,-171,-172,-173,-236,-59,-258,157,157,-246,-247,-237,87,87,157,157,157,157,157,157,-258,157,-258,-258,-121,157,157,]),'AND':([4,5,8,18,19,20,40,41,47,57,121,127,129,131,135,137,138,143,144,145,146,148,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,178,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,220,221,222,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,270,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,319,328,329,330,331,339,342,343,346,351,352,353,357,358,359,360,361,362,363,364,365,366,367,368,388,391,392,393,397,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,159,159,-258,-258,-176,159,159,-244,-258,159,159,159,-258,-179,258,-180,-182,-174,-183,-175,-177,-258,-184,-189,-190,-181,-191,-192,-193,-194,-195,-196,-197,159,159,-258,-244,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-185,-186,-187,-258,-258,-258,-258,-258,159,159,159,159,159,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,159,-198,-258,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-178,159,159,159,159,159,159,-244,-245,-248,159,-188,159,258,258,258,258,-167,-168,-169,-170,-171,-172,-173,-236,159,159,-246,-247,-237,159,159,159,159,159,159,-258,159,-258,-258,-121,159,159,]),'INTEGER':([4,5,8,18,19,20,40,41,47,57,86,121,127,129,135,137,143,144,145,146,148,154,156,157,159,162,166,178,182,193,194,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,270,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,328,329,330,331,339,351,353,388,391,399,409,415,416,420,421,422,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,171,-258,171,-258,-258,171,171,-258,171,171,171,-258,-179,-180,-182,-183,-258,-181,171,267,171,-258,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-258,-258,-258,-258,-258,171,171,171,171,171,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,171,-258,-258,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-258,171,171,171,171,171,171,171,-258,171,-258,-258,-121,171,171,]),'FLOAT':([4,5,8,18,19,20,40,41,47,57,121,127,129,135,137,143,144,145,146,148,154,156,157,159,162,166,178,193,194,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,270,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,328,329,330,331,339,351,353,388,391,399,409,415,416,420,421,422,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,172,172,-258,-258,172,172,-258,172,172,172,-258,-179,-180,-182,-183,-258,-181,172,172,-258,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-258,-258,-258,-258,-258,172,172,172,172,172,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,172,-258,-258,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-258,172,172,172,172,172,172,172,-258,172,-258,-258,-121,172,172,]),'STRINGVAL':([4,5,8,12,18,19,20,23,40,41,42,47,57,96,121,127,129,135,137,143,144,145,146,148,154,156,157,159,162,166,178,193,194,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,270,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,328,329,330,331,339,351,353,388,391,399,409,415,416,420,421,422,431,436,443,447,448,449,456,457,],[-258,-265,-264,24,-262,-263,-259,43,-260,-261,24,-258,173,24,173,-258,-258,173,173,-258,173,173,173,-258,-179,-180,-182,-183,-258,-181,173,173,-258,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-258,-258,-258,-258,-258,173,173,173,173,173,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,173,-258,-258,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-258,173,173,173,173,173,173,173,-258,173,-258,-258,-121,173,173,]),'CHARACTER':([4,5,8,18,19,20,40,41,47,57,121,127,129,135,137,143,144,145,146,148,154,156,157,159,162,166,178,193,194,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,270,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,328,329,330,331,339,351,353,388,391,399,409,415,416,420,421,422,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,174,174,-258,-258,174,174,-258,174,174,174,-258,-179,-180,-182,-183,-258,-181,174,174,-258,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-258,-258,-258,-258,-258,174,174,174,174,174,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,174,-258,-258,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-258,174,174,174,174,174,174,174,-258,174,-258,-258,-121,174,174,]),'LBRACKET':([4,5,8,18,19,20,40,41,47,49,50,57,87,90,92,121,127,129,131,135,137,138,143,144,145,146,148,154,156,157,159,162,163,166,178,183,185,186,189,190,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,219,220,221,222,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,264,270,273,275,276,277,288,289,290,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,318,319,320,323,328,329,330,331,339,342,343,346,351,352,353,376,378,388,391,392,393,404,405,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,86,-249,86,86,-258,86,86,-258,-258,224,86,86,-244,-258,86,86,86,-258,-179,-180,-182,-183,-258,-184,-181,86,86,86,-48,86,-258,86,-258,-244,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,224,-185,-186,-187,-258,-258,-258,-258,-258,86,86,86,86,86,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,86,-250,-258,86,86,86,86,86,86,-187,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-58,86,86,86,86,86,86,-244,-245,-248,86,-188,86,-59,-258,86,86,-246,-247,86,86,86,86,86,86,86,86,-258,86,-258,-258,-121,86,86,]),'STRUCT':([4,5,8,18,19,20,40,41,47,49,50,57,87,90,92,121,127,129,135,137,143,144,145,146,148,154,156,157,159,162,166,178,183,185,186,189,190,193,194,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,218,224,225,229,230,232,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,264,270,273,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,318,319,320,323,328,329,330,331,339,351,353,376,378,388,391,404,405,409,415,416,420,421,431,436,443,447,448,449,456,457,],[-258,-265,-264,-262,-263,-259,-260,-261,-258,85,-249,85,85,-258,85,85,-258,-258,85,85,-258,85,85,85,-258,-179,-180,-182,-183,-258,-181,85,85,85,-48,85,-258,85,-258,-258,-258,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-258,-110,-258,-126,-258,-258,-258,-258,-258,85,85,85,85,85,-258,-258,-155,-156,-157,-158,-159,-160,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,-258,85,-250,-258,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-58,85,85,85,85,85,85,85,85,-59,-258,85,85,85,85,85,85,85,85,85,85,-258,85,-258,-258,-121,85,85,]),'RBRACE':([4,5,8,18,19,20,31,32,33,40,41,47,48,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,128,131,132,133,134,136,138,139,140,141,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,184,187,192,193,195,196,197,210,211,212,213,220,221,222,226,227,228,231,234,235,236,261,262,263,268,269,274,278,279,280,281,282,287,290,315,316,317,325,326,327,335,343,346,347,348,349,350,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,386,387,392,393,394,397,398,400,401,402,403,406,407,408,411,418,419,423,424,425,428,432,433,434,440,441,445,446,447,452,453,454,456,459,460,],[-258,-265,-264,-262,-263,-259,-39,-40,-41,-260,-261,-258,-42,-258,-43,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,-45,-46,-49,192,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-69,-70,-71,-72,-97,-100,-102,-99,-113,-176,-139,-140,-141,-73,-244,-92,-93,-94,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-227,-50,-105,-258,-98,-147,-244,-101,-68,-103,-104,-185,-186,-187,-145,-74,-75,-146,-142,-144,-143,-198,-258,-44,-226,-47,-20,-88,-89,-90,-91,-95,-107,-138,-178,368,-258,-67,-86,-87,-123,-245,-248,-148,-149,-96,-258,-188,-255,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,397,-258,-241,-242,-258,-234,-51,-124,-125,-246,-247,-258,-237,-238,-240,423,-231,-232,-251,-256,-257,-109,-258,-115,-228,-258,-233,-108,445,-258,-117,-258,-230,-114,-116,-258,-253,-254,-239,-258,-252,-118,]),'RPAREN':([4,5,8,18,19,20,24,40,41,43,54,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,96,131,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,184,190,191,196,197,220,221,222,225,261,268,273,293,299,301,315,321,322,323,324,343,345,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,374,377,379,380,381,382,383,392,393,397,423,426,438,439,442,455,],[-258,-265,-264,-262,-263,-259,-14,-260,-261,-13,95,-12,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,-11,-176,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-227,-258,-10,-147,-244,-185,-186,-187,-258,-198,-226,320,346,352,354,-178,376,-258,-243,-64,-245,393,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-234,-60,-62,-63,406,407,408,-246,-247,-237,-228,-258,452,453,-61,459,]),'BOOL':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,64,-249,64,-258,64,64,64,-48,64,-258,-250,64,64,-58,64,-59,-258,64,64,]),'BYTE':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,65,-249,65,-258,65,65,65,-48,65,-258,-250,65,65,-58,65,-59,-258,65,65,]),'INT':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,66,-249,66,-258,66,66,66,-48,66,-258,-250,66,66,-58,66,-59,-258,66,66,]),'UINT8':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,67,-249,67,-258,67,67,67,-48,67,-258,-250,67,67,-58,67,-59,-258,67,67,]),'UINT16':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,68,-249,68,-258,68,68,68,-48,68,-258,-250,68,68,-58,68,-59,-258,68,68,]),'UINT32':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,69,-249,69,-258,69,69,69,-48,69,-258,-250,69,69,-58,69,-59,-258,69,69,]),'UINT64':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,70,-249,70,-258,70,70,70,-48,70,-258,-250,70,70,-58,70,-59,-258,70,70,]),'INT8':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,71,-249,71,-258,71,71,71,-48,71,-258,-250,71,71,-58,71,-59,-258,71,71,]),'INT16':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,72,-249,72,-258,72,72,72,-48,72,-258,-250,72,72,-58,72,-59,-258,72,72,]),'INT32':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,73,-249,73,-258,73,73,73,-48,73,-258,-250,73,73,-58,73,-59,-258,73,73,]),'INT64':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,74,-249,74,-258,74,74,74,-48,74,-258,-250,74,74,-58,74,-59,-258,74,74,]),'UINT':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,75,-249,75,-258,75,75,75,-48,75,-258,-250,75,75,-58,75,-59,-258,75,75,]),'FLOAT32':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,76,-249,76,-258,76,76,76,-48,76,-258,-250,76,76,-58,76,-59,-258,76,76,]),'FLOAT64':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,77,-249,77,-258,77,77,77,-48,77,-258,-250,77,77,-58,77,-59,-258,77,77,]),'UINTPTR':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,78,-249,78,-258,78,78,78,-48,78,-258,-250,78,78,-58,78,-59,-258,78,78,]),'STRING':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,79,-249,79,-258,79,79,79,-48,79,-258,-250,79,79,-58,79,-59,-258,79,79,]),'ERROR':([4,5,8,49,50,87,90,92,183,185,186,189,190,264,273,318,320,323,376,378,404,405,],[-258,-265,-264,80,-249,80,-258,80,80,80,-48,80,-258,-250,80,80,-58,80,-59,-258,80,80,]),'SEMI':([4,5,8,10,13,14,18,19,20,21,22,24,27,29,30,31,32,33,34,43,45,46,48,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,128,129,131,132,133,134,136,138,139,140,141,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,184,187,188,189,192,195,196,197,210,211,212,213,217,218,220,221,222,226,227,228,231,234,235,236,261,263,268,269,271,272,278,279,280,281,282,287,289,290,315,320,325,326,327,335,338,339,340,341,342,343,346,347,348,349,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,374,375,376,386,387,389,390,391,392,393,397,402,406,407,408,411,417,423,425,428,445,452,453,459,],[-258,-265,-264,20,20,-5,20,20,-259,-8,20,-14,20,-18,-19,-39,-40,-41,-53,-13,-52,-66,-42,20,-43,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,-45,-46,-49,-9,20,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-69,-70,-71,-72,-97,-100,-102,-99,-113,-258,-176,-139,-140,-141,-73,-244,-92,-93,-94,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-227,-50,-54,-56,-105,-98,-147,-244,-101,-68,-103,-104,-258,-126,-185,-186,-187,-145,-74,-75,-146,-142,-144,-143,-198,-44,-226,-47,-57,-65,-88,-89,-90,-91,-95,-107,20,-138,-178,-58,-67,-86,-87,-123,-73,20,20,-135,-244,-245,-248,-148,-149,-96,-188,-255,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-234,-51,-59,-124,-125,20,-137,20,-246,-247,-237,20,-251,-256,-257,-109,20,-228,-233,-108,-114,-253,-254,-252,]),'CASE':([4,5,8,18,19,20,31,32,33,40,41,48,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,128,131,132,133,134,136,138,139,140,141,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,184,187,192,193,195,196,197,210,211,212,213,220,221,222,226,227,228,231,234,235,236,261,263,268,269,274,278,279,280,281,282,287,290,315,325,326,327,335,343,346,347,348,349,350,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,374,375,386,387,392,393,394,397,406,407,408,411,418,419,423,428,433,445,447,452,453,456,459,460,],[-258,-265,-264,-262,-263,-259,-39,-40,-41,-260,-261,-42,-43,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,-45,-46,-49,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-69,-70,-71,-72,-97,-100,-102,-99,-113,-176,-139,-140,-141,-73,-244,-92,-93,-94,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-227,-50,-105,-258,-98,-147,-244,-101,-68,-103,-104,-185,-186,-187,-145,-74,-75,-146,-142,-144,-143,-198,-44,-226,-47,-20,-88,-89,-90,-91,-95,-107,-138,-178,-67,-86,-87,-123,-245,-248,-148,-149,-96,-258,-188,-255,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-234,-51,-124,-125,-246,-247,-258,-237,-251,-256,-257,-109,436,-115,-228,-108,436,-114,-258,-253,-254,-258,-252,-118,]),'DEFAULT':([4,5,8,18,19,20,31,32,33,40,41,48,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,128,131,132,133,134,136,138,139,140,141,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,184,187,192,193,195,196,197,210,211,212,213,220,221,222,226,227,228,231,234,235,236,261,263,268,269,274,278,279,280,281,282,287,290,315,325,326,327,335,343,346,347,348,349,350,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,374,375,386,387,392,393,394,397,406,407,408,411,418,419,423,428,433,445,447,452,453,456,459,460,],[-258,-265,-264,-262,-263,-259,-39,-40,-41,-260,-261,-42,-43,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,-45,-46,-49,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-69,-70,-71,-72,-97,-100,-102,-99,-113,-176,-139,-140,-141,-73,-244,-92,-93,-94,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-227,-50,-105,-258,-98,-147,-244,-101,-68,-103,-104,-185,-186,-187,-145,-74,-75,-146,-142,-144,-143,-198,-44,-226,-47,-20,-88,-89,-90,-91,-95,-107,-138,-178,-67,-86,-87,-123,-245,-248,-148,-149,-96,-258,-188,-255,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-234,-51,-124,-125,-246,-247,-258,-237,-251,-256,-257,-109,437,-115,-228,-108,437,-114,-258,-253,-254,-258,-252,-118,]),'COLON':([4,5,8,116,131,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,343,346,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,435,437,450,451,458,461,],[-258,-265,-264,194,-176,-68,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-245,-248,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,447,-258,-258,-122,-120,-119,]),'IMPORT':([6,17,18,19,20,25,40,41,],[12,12,-262,-263,-259,-4,-260,-261,]),'FUNC':([6,9,11,15,16,17,18,19,20,25,39,40,41,44,],[-258,-258,-7,38,-3,-258,-262,-263,-259,-4,-6,-260,-261,38,]),'COMMA':([49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,184,196,197,220,221,222,261,264,268,298,300,315,322,323,324,338,342,343,346,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,374,380,384,392,393,395,396,397,404,423,426,427,440,],[59,-249,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,59,-176,229,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-227,229,-244,-185,-186,-187,-198,-250,-226,351,353,-178,378,-243,-64,229,-244,-245,-248,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,399,-241,-242,-234,-63,409,-246,-247,420,421,-237,59,-228,378,443,399,]),'EQUALS':([58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,184,187,196,197,220,221,222,261,268,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,374,392,393,397,423,],[178,-243,-219,-220,-221,-202,-203,-204,-205,-206,-207,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-222,-223,-224,-225,199,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-227,270,-147,-244,-185,-186,-187,-198,-226,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-234,-246,-247,-237,-228,]),'RBRACKET':([86,131,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,266,267,315,343,344,346,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[183,-176,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,318,-235,-178,-245,392,-248,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'TIMESEQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[200,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'DIVEQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[201,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'MODEQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[202,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'PLUSEQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[203,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'MINUSEQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[204,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'LSHIFTEQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[205,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'RSHIFTEQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[206,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'ANDEQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[207,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'OREQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[208,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'XOREQUAL':([122,131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,261,315,338,342,343,346,347,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[209,-176,-147,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-147,-244,-185,-186,-187,-198,-178,-147,-244,-245,-248,-148,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'DIVIDE':([131,138,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,254,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,254,254,254,254,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'MODULO':([131,138,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,255,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,255,255,255,255,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'LSHIFT':([131,138,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,256,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,256,256,256,256,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'RSHIFT':([131,138,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,257,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,257,257,257,257,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'ANDNOT':([131,138,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,259,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,259,259,259,259,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'OR':([131,138,142,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,251,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,251,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'XOR':([131,138,142,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,252,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,252,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'LT':([131,138,142,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,243,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,243,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'GT':([131,138,142,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,244,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,244,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'LE':([131,138,142,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,245,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,245,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'GE':([131,138,142,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,246,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,246,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'EQ':([131,138,142,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,247,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,247,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'NE':([131,138,142,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,248,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,-188,248,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'LAND':([131,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,342,343,346,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,-244,-165,241,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,-244,-245,-248,241,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'INCR':([131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,338,342,343,346,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,227,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,227,-244,-245,-248,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'DECR':([131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,197,220,221,222,261,315,338,342,343,346,348,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,392,393,397,],[-176,228,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,-244,-185,-186,-187,-198,-178,228,-244,-245,-248,-149,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,-246,-247,-237,]),'LOR':([131,136,138,142,151,152,153,155,158,160,161,163,164,165,167,168,169,171,172,173,174,196,197,220,221,222,226,231,234,235,236,261,297,298,299,300,301,315,334,338,342,343,344,346,348,349,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,381,382,383,384,390,392,393,395,396,397,427,438,439,455,461,],[-176,230,-244,-165,-150,-152,-154,-166,-174,-175,-177,-184,-189,-190,-191,-192,-193,-194,-195,-196,-197,230,-244,-185,-186,-187,230,230,230,230,230,-198,230,230,230,230,230,-178,230,230,-244,-245,230,-248,-149,230,-188,-151,-153,-161,-162,-163,-164,-167,-168,-169,-170,-171,-172,-173,-236,230,230,230,230,230,-246,-247,230,230,-237,230,230,230,230,230,]),'PERIOD':([131,138,163,197,219,220,221,222,290,342,343,346,352,392,393,],[223,-244,-184,-244,223,-185,-186,-187,-187,-244,-245,-248,-188,-246,-247,]),'AUTOASIGN':([138,342,],[232,232,]),'ELSE':([192,287,332,333,],[-105,-258,385,-111,]),'MALLOC':([199,],[283,]),'SIN':([199,],[284,]),'COS':([199,],[285,]),'OPENFILE':([199,],[286,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Start':([0,],[1,]),'SourceFile':([0,],[2,]),'RepeatNewline':([0,4,36,37,38,47,59,86,143,148,162,180,190,194,198,199,215,217,223,224,225,229,230,232,241,242,249,250,251,252,253,254,255,256,257,258,259,262,270,317,350,378,399,447,448,450,],[3,8,51,52,53,57,179,182,233,238,260,265,273,275,276,277,288,289,291,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,373,394,405,422,456,457,458,]),'empty':([0,4,6,9,15,17,36,37,38,44,47,57,59,85,86,90,127,129,143,148,162,180,190,193,194,198,199,215,217,223,224,225,229,230,232,241,242,249,250,251,252,253,254,255,256,257,258,259,262,270,287,317,322,350,370,373,378,385,394,399,418,424,426,433,436,437,440,447,448,450,456,],[5,5,11,16,28,11,5,5,5,28,5,99,5,181,5,186,216,218,5,5,5,5,5,99,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,333,5,379,5,400,403,5,412,419,5,434,403,379,434,449,451,400,5,5,5,99,]),'PackageClause':([3,],[6,]),'ImportClause':([6,17,],[9,39,]),'ImportStmt':([6,17,],[10,10,]),'PackageName':([7,],[13,]),'A':([9,],[15,]),'StatementEnd':([10,13,18,19,22,27,55,98,402,],[17,25,40,41,42,44,96,193,424,]),'terminator':([10,13,18,19,22,27,55,98,289,339,340,389,391,402,417,],[18,18,18,18,18,18,18,18,339,388,391,415,416,18,431,]),'Import':([12,42,96,],[21,55,55,]),'RepeatTopLevelDecl':([15,44,],[26,56,]),'TopLevelDecl':([15,44,],[27,27,]),'Declaration':([15,44,57,193,275,456,],[29,29,100,100,100,100,]),'FunctionDecl':([15,44,],[30,30,]),'ConstDecl':([15,44,57,193,275,456,],[31,31,31,31,31,31,]),'TypeDecl':([15,44,57,193,275,456,],[32,32,32,32,32,32,]),'VarDecl':([15,44,57,193,275,456,],[33,33,33,33,33,33,]),'FunctionMarker':([15,44,],[34,34,]),'FunctionBody':([34,],[45,]),'Block':([34,57,193,214,275,289,336,337,410,456,],[46,108,108,287,108,335,386,387,428,108,]),'ConstSpec':([35,],[48,]),'IdentifierList':([35,52,373,424,],[49,92,404,404,]),'ImportList':([42,96,],[54,191,]),'Types':([49,87,92,183,185,189,273,318,323,404,405,],[58,184,187,268,269,272,324,374,380,425,324,]),'Mytypes':([49,87,92,183,185,189,273,318,323,404,405,],[61,61,61,61,61,61,61,61,61,61,61,]),'TypeLit':([49,87,92,183,185,189,273,318,323,404,405,],[62,62,62,62,62,62,62,62,62,62,62,]),'OperandName':([49,87,92,183,185,189,273,318,323,404,405,],[63,63,63,63,63,63,63,63,63,63,63,]),'StructType':([49,57,87,92,121,135,137,144,145,146,178,183,185,189,193,233,237,238,239,240,260,273,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,318,319,323,328,329,330,331,339,351,353,388,391,404,405,409,415,416,420,421,431,443,456,457,],[81,176,81,81,176,176,176,176,176,176,176,81,81,81,176,176,176,176,176,176,176,81,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,81,176,81,176,176,176,176,176,176,176,176,176,81,81,176,176,176,176,176,176,176,176,176,]),'ArrayType':([49,57,87,92,121,135,137,144,145,146,178,183,185,189,193,233,237,238,239,240,260,273,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,318,319,323,328,329,330,331,339,351,353,388,391,404,405,409,415,416,420,421,431,443,456,457,],[82,175,82,82,175,175,175,175,175,175,175,82,82,82,175,175,175,175,175,175,175,82,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,82,175,82,175,175,175,175,175,175,175,175,175,82,82,175,175,175,175,175,175,175,175,175,]),'PointerType':([49,87,92,183,185,189,273,318,323,404,405,],[83,83,83,83,83,83,83,83,83,83,83,]),'SliceType':([49,57,87,92,121,135,137,144,145,146,178,183,185,189,193,233,237,238,239,240,260,273,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,318,319,323,328,329,330,331,339,351,353,388,391,404,405,409,415,416,420,421,431,443,456,457,],[84,177,84,84,177,177,177,177,177,177,177,84,84,84,177,177,177,177,177,177,177,84,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,84,177,84,177,177,177,177,177,177,177,177,177,84,84,177,177,177,177,177,177,177,177,177,]),'TypeSpec':([51,],[88,]),'TypeDef':([51,],[89,]),'VarSpec':([52,],[91,]),'FunctionName':([53,],[93,]),'StatementList':([57,193,456,],[97,274,460,]),'Statement':([57,193,275,456,],[98,98,325,98,]),'LabeledStmt':([57,193,275,456,],[101,101,101,101,]),'SimpleStmt':([57,193,275,289,388,415,416,431,456,],[102,102,102,341,414,414,414,414,102,]),'ReturnStmt':([57,193,275,456,],[103,103,103,103,]),'BreakStmt':([57,193,275,456,],[104,104,104,104,]),'ContinueStmt':([57,193,275,456,],[105,105,105,105,]),'FallthroughStmt':([57,193,275,456,],[106,106,106,106,]),'GotoStmt':([57,193,275,456,],[107,107,107,107,]),'IfStmt':([57,193,275,385,456,],[109,109,109,411,109,]),'SwitchStmt':([57,193,275,456,],[110,110,110,110,]),'ForStmt':([57,193,275,456,],[111,111,111,111,]),'DeferStmt':([57,193,275,456,],[112,112,112,112,]),'PrintStmt':([57,193,275,456,],[113,113,113,113,]),'ScanIntStmt':([57,193,275,456,],[114,114,114,114,]),'ScanStrStmt':([57,193,275,456,],[115,115,115,115,]),'Label':([57,123,124,126,193,275,456,],[116,210,212,213,116,116,116,]),'Assignment':([57,193,275,289,388,415,416,431,456,],[117,117,117,117,117,117,117,117,117,]),'ShortVarDecl':([57,193,275,289,388,415,416,431,456,],[118,118,118,118,118,118,118,118,118,]),'IncDecStmt':([57,193,275,289,388,415,416,431,456,],[119,119,119,119,119,119,119,119,119,]),'ExpressionStmt':([57,193,275,289,388,415,416,431,456,],[120,120,120,120,120,120,120,120,120,]),'ExpressionList':([57,121,178,193,275,276,277,289,293,294,319,388,415,416,431,456,],[122,195,263,122,122,326,327,122,345,347,375,122,122,122,122,122,]),'ExprSwitchStmt':([57,193,275,456,],[128,128,128,128,]),'PrimaryExpr':([57,121,130,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[131,131,219,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'PrintIntStmt':([57,193,275,456,],[132,132,132,132,]),'PrintStrStmt':([57,193,275,456,],[133,133,133,133,]),'PrintFloatStmt':([57,193,275,456,],[134,134,134,134,]),'Expression':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,275,276,277,288,289,292,293,294,296,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[136,196,226,231,234,235,236,196,136,297,298,299,300,301,136,196,196,334,338,344,196,196,349,196,381,382,383,384,390,395,396,136,390,427,136,136,438,439,136,455,136,461,]),'ReadFileExp':([57,193,275,289,388,415,416,431,456,],[139,139,139,139,139,139,139,139,139,]),'WriteFileExp':([57,193,275,289,388,415,416,431,456,],[140,140,140,140,140,140,140,140,140,]),'CloseFileExp':([57,193,275,289,388,415,416,431,456,],[141,141,141,141,141,141,141,141,141,]),'Term1':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,275,276,277,288,289,292,293,294,295,296,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,348,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'Term2':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,275,276,277,288,289,292,293,294,295,296,302,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,355,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'Term3':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,275,276,277,288,289,292,293,294,295,296,302,303,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,356,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'Term4':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,357,358,359,360,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'Term5':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,361,362,363,364,365,366,367,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'UnaryExp':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,315,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'Literal':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'UnaryOp':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'OperandName2':([57,121,130,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'BasicLit':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,422,431,443,456,457,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,372,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,372,164,164,164,164,]),'CompositeLit':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'intLit':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,422,431,443,456,457,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'floatLit':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,422,431,443,456,457,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'stringLit':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,422,431,443,456,457,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'LiteralType':([57,121,135,137,144,145,146,178,193,233,237,238,239,240,260,275,276,277,288,289,292,293,294,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,319,328,329,330,331,339,351,353,388,391,409,415,416,420,421,431,443,456,457,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'M':([85,],[180,]),'K':([90,],[185,]),'Signature':([93,],[188,]),'Parameters':([93,],[189,]),'AssignOp':([122,],[198,]),'IfExp':([127,],[214,]),'IfMarker':([127,],[215,]),'ForMarker':([129,],[217,]),'Selector':([131,219,],[220,220,]),'Index':([131,219,],[221,221,]),'Arguments':([131,219,],[222,290,]),'Relop':([152,355,],[242,242,]),'LiteralValue':([170,],[261,]),'ArrayLength':([182,],[266,]),'Result':([189,],[271,]),'MallocExp':([199,],[278,]),'SinExp':([199,],[279,]),'CosExp':([199,],[280,]),'OpenFileExp':([199,],[281,]),'ParameterList':([273,],[321,]),'ParameterDecl':([273,405,],[322,426,]),'EndIfMarker':([287,],[332,]),'Condition':([289,339,391,],[336,389,417,]),'ForClause':([289,],[337,]),'InitStmt':([289,],[340,]),'ElementList':([316,],[369,]),'KeyedElement':([316,422,],[370,440,]),'Element':([316,422,],[371,371,]),'RepeatParameterDecl':([322,426,],[377,442,]),'RepeatKeyedElement':([370,440,],[398,454,]),'RepeatFieldDecl':([373,424,],[401,441,]),'FieldDecl':([373,424,],[402,402,]),'ElseMarker':([385,],[410,]),'PostStmt':([388,415,416,431,],[413,429,430,444,]),'Exp_Inh':([394,],[418,]),'RepeatExprCaseClause':([418,433,],[432,446,]),'ExprCaseClause':([418,433,],[433,433,]),'ExprSwitchCase':([418,433,],[435,435,]),'CaseMarker':([436,],[448,]),'DefaultMarker':([437,],[450,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> SourceFile','Start',1,'p_Start','semantic_parser.py',618),
  ('SourceFile -> RepeatNewline PackageClause ImportClause A RepeatTopLevelDecl','SourceFile',5,'p_SourceFile','semantic_parser.py',643),
  ('A -> empty','A',1,'p_A','semantic_parser.py',655),
  ('PackageClause -> PACKAGE PackageName StatementEnd','PackageClause',3,'p_PackageClause','semantic_parser.py',665),
  ('PackageName -> ID','PackageName',1,'p_PackageName','semantic_parser.py',673),
  ('ImportClause -> ImportStmt StatementEnd ImportClause','ImportClause',3,'p_ImportClause','semantic_parser.py',680),
  ('ImportClause -> empty','ImportClause',1,'p_ImportClause','semantic_parser.py',681),
  ('ImportStmt -> IMPORT Import','ImportStmt',2,'p_ImportStmt','semantic_parser.py',691),
  ('ImportStmt -> IMPORT LPAREN StatementEnd ImportList RPAREN','ImportStmt',5,'p_ImportStmt','semantic_parser.py',692),
  ('ImportList -> Import StatementEnd ImportList','ImportList',3,'p_ImportList','semantic_parser.py',705),
  ('ImportList -> Import StatementEnd','ImportList',2,'p_ImportList','semantic_parser.py',706),
  ('ImportList -> Import','ImportList',1,'p_ImportList','semantic_parser.py',707),
  ('Import -> ID STRINGVAL','Import',2,'p_Import','semantic_parser.py',719),
  ('Import -> STRINGVAL','Import',1,'p_Import','semantic_parser.py',720),
  ('RepeatTopLevelDecl -> TopLevelDecl StatementEnd RepeatTopLevelDecl','RepeatTopLevelDecl',3,'p_RepeatTopLevelDecl','semantic_parser.py',736),
  ('RepeatTopLevelDecl -> TopLevelDecl','RepeatTopLevelDecl',1,'p_RepeatTopLevelDecl','semantic_parser.py',737),
  ('RepeatTopLevelDecl -> empty','RepeatTopLevelDecl',1,'p_RepeatTopLevelDecl','semantic_parser.py',738),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','semantic_parser.py',777),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','semantic_parser.py',778),
  ('StatementList -> Statement StatementEnd StatementList','StatementList',3,'p_StatementList','semantic_parser.py',785),
  ('StatementList -> Statement','StatementList',1,'p_StatementList','semantic_parser.py',786),
  ('StatementList -> empty','StatementList',1,'p_StatementList','semantic_parser.py',787),
  ('Statement -> Declaration','Statement',1,'p_Statement','semantic_parser.py',807),
  ('Statement -> LabeledStmt','Statement',1,'p_Statement','semantic_parser.py',808),
  ('Statement -> SimpleStmt','Statement',1,'p_Statement','semantic_parser.py',809),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','semantic_parser.py',810),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','semantic_parser.py',811),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','semantic_parser.py',812),
  ('Statement -> FallthroughStmt','Statement',1,'p_Statement','semantic_parser.py',813),
  ('Statement -> GotoStmt','Statement',1,'p_Statement','semantic_parser.py',814),
  ('Statement -> Block','Statement',1,'p_Statement','semantic_parser.py',815),
  ('Statement -> IfStmt','Statement',1,'p_Statement','semantic_parser.py',816),
  ('Statement -> SwitchStmt','Statement',1,'p_Statement','semantic_parser.py',817),
  ('Statement -> ForStmt','Statement',1,'p_Statement','semantic_parser.py',818),
  ('Statement -> DeferStmt','Statement',1,'p_Statement','semantic_parser.py',819),
  ('Statement -> PrintStmt','Statement',1,'p_Statement','semantic_parser.py',820),
  ('Statement -> ScanIntStmt','Statement',1,'p_Statement','semantic_parser.py',821),
  ('Statement -> ScanStrStmt','Statement',1,'p_Statement','semantic_parser.py',822),
  ('Declaration -> ConstDecl','Declaration',1,'p_Declaration','semantic_parser.py',831),
  ('Declaration -> TypeDecl','Declaration',1,'p_Declaration','semantic_parser.py',832),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','semantic_parser.py',833),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_ConstDecl','semantic_parser.py',842),
  ('ConstSpec -> IdentifierList Types','ConstSpec',2,'p_ConstSpec','semantic_parser.py',852),
  ('ConstSpec -> IdentifierList Types EQUALS ExpressionList','ConstSpec',4,'p_ConstSpec','semantic_parser.py',853),
  ('TypeDecl -> TYPE RepeatNewline TypeSpec','TypeDecl',3,'p_TypeDecl','semantic_parser.py',969),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_TypeSpec','semantic_parser.py',981),
  ('TypeDef -> ID K Types','TypeDef',3,'p_TypeDef','semantic_parser.py',990),
  ('K -> empty','K',1,'p_K','semantic_parser.py',1004),
  ('VarDecl -> VAR RepeatNewline VarSpec','VarDecl',3,'p_VarDecl','semantic_parser.py',1023),
  ('VarSpec -> IdentifierList Types','VarSpec',2,'p_VarSpec','semantic_parser.py',1031),
  ('VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList','VarSpec',5,'p_VarSpec','semantic_parser.py',1032),
  ('FunctionDecl -> FunctionMarker FunctionBody','FunctionDecl',2,'p_FunctionDecl','semantic_parser.py',1156),
  ('FunctionDecl -> FunctionMarker','FunctionDecl',1,'p_FunctionDecl','semantic_parser.py',1157),
  ('FunctionMarker -> FUNC RepeatNewline FunctionName Signature','FunctionMarker',4,'p_FunctionMarker','semantic_parser.py',1202),
  ('FunctionName -> ID','FunctionName',1,'p_FunctionName','semantic_parser.py',1242),
  ('Signature -> Parameters','Signature',1,'p_Signature','semantic_parser.py',1266),
  ('Signature -> Parameters Result','Signature',2,'p_Signature','semantic_parser.py',1267),
  ('Parameters -> LPAREN RepeatNewline RPAREN','Parameters',3,'p_Parameters','semantic_parser.py',1292),
  ('Parameters -> LPAREN RepeatNewline ParameterList RPAREN','Parameters',4,'p_Parameters','semantic_parser.py',1293),
  ('ParameterList -> ParameterDecl RepeatParameterDecl','ParameterList',2,'p_ParameterList','semantic_parser.py',1316),
  ('RepeatParameterDecl -> COMMA RepeatNewline ParameterDecl RepeatParameterDecl','RepeatParameterDecl',4,'p_RepeatParameterDecl','semantic_parser.py',1327),
  ('RepeatParameterDecl -> empty','RepeatParameterDecl',1,'p_RepeatParameterDecl','semantic_parser.py',1328),
  ('ParameterDecl -> ID Types','ParameterDecl',2,'p_ParameterDecl','semantic_parser.py',1342),
  ('ParameterDecl -> Types','ParameterDecl',1,'p_ParameterDecl','semantic_parser.py',1343),
  ('Result -> Types','Result',1,'p_Result','semantic_parser.py',1386),
  ('FunctionBody -> Block','FunctionBody',1,'p_FunctionBody','semantic_parser.py',1397),
  ('LabeledStmt -> Label COLON RepeatNewline Statement','LabeledStmt',4,'p_LabeledStmt','semantic_parser.py',1406),
  ('Label -> ID','Label',1,'p_Label','semantic_parser.py',1423),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','semantic_parser.py',1438),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','semantic_parser.py',1439),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','semantic_parser.py',1440),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_SimpleStmt','semantic_parser.py',1441),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_ExpressionStmt','semantic_parser.py',1449),
  ('IncDecStmt -> Expression INCR','IncDecStmt',2,'p_IncDecStmt','semantic_parser.py',1461),
  ('IncDecStmt -> Expression DECR','IncDecStmt',2,'p_IncDecStmt','semantic_parser.py',1462),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1492),
  ('AssignOp -> DIVEQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1493),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1494),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1495),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1496),
  ('AssignOp -> LSHIFTEQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1497),
  ('AssignOp -> RSHIFTEQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1498),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1499),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1500),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','semantic_parser.py',1501),
  ('Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList','Assignment',4,'p_Assignments','semantic_parser.py',1509),
  ('Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList','Assignment',4,'p_Assignments','semantic_parser.py',1510),
  ('Assignment -> ExpressionList EQUALS MallocExp','Assignment',3,'p_Assignments','semantic_parser.py',1511),
  ('Assignment -> ExpressionList EQUALS SinExp','Assignment',3,'p_Assignments','semantic_parser.py',1512),
  ('Assignment -> ExpressionList EQUALS CosExp','Assignment',3,'p_Assignments','semantic_parser.py',1513),
  ('Assignment -> ExpressionList EQUALS OpenFileExp','Assignment',3,'p_Assignments','semantic_parser.py',1514),
  ('Assignment -> ReadFileExp','Assignment',1,'p_Assignments','semantic_parser.py',1515),
  ('Assignment -> WriteFileExp','Assignment',1,'p_Assignments','semantic_parser.py',1516),
  ('Assignment -> CloseFileExp','Assignment',1,'p_Assignments','semantic_parser.py',1517),
  ('Assignment -> ExpressionList EQUALS NULL','Assignment',3,'p_Assignments','semantic_parser.py',1518),
  ('ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression','ShortVarDecl',4,'p_ShortVarDecl','semantic_parser.py',1806),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_ReturnStmt','semantic_parser.py',1835),
  ('ReturnStmt -> RETURN ExpressionList','ReturnStmt',2,'p_ReturnStmt','semantic_parser.py',1836),
  ('FallthroughStmt -> FALLTHROUGH','FallthroughStmt',1,'p_FallthroughStmt','semantic_parser.py',1885),
  ('BreakStmt -> BREAK','BreakStmt',1,'p_BreakStmt','semantic_parser.py',1893),
  ('BreakStmt -> BREAK Label','BreakStmt',2,'p_BreakStmt','semantic_parser.py',1894),
  ('ContinueStmt -> CONTINUE','ContinueStmt',1,'p_ContinueStmt','semantic_parser.py',1919),
  ('ContinueStmt -> CONTINUE Label','ContinueStmt',2,'p_ContinueStmt','semantic_parser.py',1920),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_GotoStmt','semantic_parser.py',1944),
  ('Block -> LBRACE RepeatNewline StatementList RBRACE','Block',4,'p_Block','semantic_parser.py',1959),
  ('IfExp -> IfMarker RepeatNewline Expression','IfExp',3,'p_IfExp','semantic_parser.py',1968),
  ('IfStmt -> IF IfExp Block','IfStmt',3,'p_IfStmt','semantic_parser.py',1994),
  ('IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker Block','IfStmt',7,'p_IfStmt','semantic_parser.py',1995),
  ('IfStmt -> IF IfExp Block EndIfMarker ELSE IfStmt','IfStmt',6,'p_IfStmt','semantic_parser.py',1996),
  ('IfMarker -> empty','IfMarker',1,'p_IfMarker','semantic_parser.py',2067),
  ('EndIfMarker -> empty','EndIfMarker',1,'p_EndIfMarker','semantic_parser.py',2094),
  ('ElseMarker -> empty','ElseMarker',1,'p_ElseMarker','semantic_parser.py',2116),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_SwitchStmt','semantic_parser.py',2133),
  ('ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE','ExprSwitchStmt',8,'p_ExprSwitchStmt','semantic_parser.py',2140),
  ('Exp_Inh -> empty','Exp_Inh',1,'p_Exp_Inh','semantic_parser.py',2156),
  ('RepeatExprCaseClause -> ExprCaseClause RepeatExprCaseClause','RepeatExprCaseClause',2,'p_RepeatExprCaseClause','semantic_parser.py',2164),
  ('RepeatExprCaseClause -> empty','RepeatExprCaseClause',1,'p_RepeatExprCaseClause','semantic_parser.py',2165),
  ('ExprCaseClause -> ExprSwitchCase COLON RepeatNewline StatementList','ExprCaseClause',4,'p_ExprCaseClause','semantic_parser.py',2194),
  ('ExprSwitchCase -> CASE CaseMarker RepeatNewline Expression','ExprSwitchCase',4,'p_ExprSwitchCase','semantic_parser.py',2223),
  ('ExprSwitchCase -> DEFAULT DefaultMarker RepeatNewline','ExprSwitchCase',3,'p_ExprSwitchCase','semantic_parser.py',2224),
  ('CaseMarker -> empty','CaseMarker',1,'p_CaseMarker','semantic_parser.py',2240),
  ('DefaultMarker -> empty','DefaultMarker',1,'p_DefaultMarker','semantic_parser.py',2256),
  ('ForStmt -> FOR ForMarker RepeatNewline Block','ForStmt',4,'p_ForStmt','semantic_parser.py',2273),
  ('ForStmt -> FOR ForMarker RepeatNewline Condition Block','ForStmt',5,'p_ForStmt','semantic_parser.py',2274),
  ('ForStmt -> FOR ForMarker RepeatNewline ForClause Block','ForStmt',5,'p_ForStmt','semantic_parser.py',2275),
  ('ForMarker -> empty','ForMarker',1,'p_ForMarker','semantic_parser.py',2326),
  ('ForClause -> terminator terminator','ForClause',2,'p_ForClause','semantic_parser.py',2342),
  ('ForClause -> InitStmt terminator terminator','ForClause',3,'p_ForClause','semantic_parser.py',2343),
  ('ForClause -> terminator Condition terminator','ForClause',3,'p_ForClause','semantic_parser.py',2344),
  ('ForClause -> terminator terminator PostStmt','ForClause',3,'p_ForClause','semantic_parser.py',2345),
  ('ForClause -> InitStmt terminator Condition terminator','ForClause',4,'p_ForClause','semantic_parser.py',2346),
  ('ForClause -> InitStmt terminator terminator PostStmt','ForClause',4,'p_ForClause','semantic_parser.py',2347),
  ('ForClause -> terminator Condition terminator PostStmt','ForClause',4,'p_ForClause','semantic_parser.py',2348),
  ('ForClause -> InitStmt terminator Condition terminator PostStmt','ForClause',5,'p_ForClause','semantic_parser.py',2349),
  ('InitStmt -> SimpleStmt','InitStmt',1,'p_InitStmt','semantic_parser.py',2416),
  ('PostStmt -> SimpleStmt','PostStmt',1,'p_PostStmt','semantic_parser.py',2424),
  ('Condition -> Expression','Condition',1,'p_Condition','semantic_parser.py',2432),
  ('DeferStmt -> DEFER PrimaryExpr Arguments','DeferStmt',3,'p_DeferStmt','semantic_parser.py',2446),
  ('PrintStmt -> PrintIntStmt','PrintStmt',1,'p_PrintStmt','semantic_parser.py',2456),
  ('PrintStmt -> PrintStrStmt','PrintStmt',1,'p_PrintStmt','semantic_parser.py',2457),
  ('PrintStmt -> PrintFloatStmt','PrintStmt',1,'p_PrintStmt','semantic_parser.py',2458),
  ('PrintIntStmt -> PRINTINT Expression','PrintIntStmt',2,'p_PrintIntStmt','semantic_parser.py',2465),
  ('PrintFloatStmt -> PRINTFLOAT Expression','PrintFloatStmt',2,'p_PrintFloatStmt','semantic_parser.py',2473),
  ('PrintStrStmt -> PRINTSTR Expression','PrintStrStmt',2,'p_PrintStrStmt','semantic_parser.py',2481),
  ('ScanIntStmt -> SCANINT Expression','ScanIntStmt',2,'p_ScanIntStmt','semantic_parser.py',2494),
  ('ScanStrStmt -> SCANSTR Expression','ScanStrStmt',2,'p_ScanstrStmt','semantic_parser.py',2502),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionList','semantic_parser.py',2512),
  ('ExpressionList -> Expression COMMA RepeatNewline ExpressionList','ExpressionList',4,'p_ExpressionList','semantic_parser.py',2513),
  ('Expression -> Expression LOR RepeatNewline Term1','Expression',4,'p_Expression','semantic_parser.py',2543),
  ('Expression -> Term1','Expression',1,'p_Expression','semantic_parser.py',2544),
  ('Term1 -> Term1 LAND RepeatNewline Term2','Term1',4,'p_Term1','semantic_parser.py',2596),
  ('Term1 -> Term2','Term1',1,'p_Term1','semantic_parser.py',2597),
  ('Term2 -> Term2 Relop RepeatNewline Term3','Term2',4,'p_Term2','semantic_parser.py',2651),
  ('Term2 -> Term3','Term2',1,'p_Term2','semantic_parser.py',2652),
  ('Relop -> LT','Relop',1,'p_Relop','semantic_parser.py',2807),
  ('Relop -> GT','Relop',1,'p_Relop','semantic_parser.py',2808),
  ('Relop -> LE','Relop',1,'p_Relop','semantic_parser.py',2809),
  ('Relop -> GE','Relop',1,'p_Relop','semantic_parser.py',2810),
  ('Relop -> EQ','Relop',1,'p_Relop','semantic_parser.py',2811),
  ('Relop -> NE','Relop',1,'p_Relop','semantic_parser.py',2812),
  ('Term3 -> Term3 PLUS RepeatNewline Term4','Term3',4,'p_Term3','semantic_parser.py',2820),
  ('Term3 -> Term3 MINUS RepeatNewline Term4','Term3',4,'p_Term3','semantic_parser.py',2821),
  ('Term3 -> Term3 OR RepeatNewline Term4','Term3',4,'p_Term3','semantic_parser.py',2822),
  ('Term3 -> Term3 XOR RepeatNewline Term4','Term3',4,'p_Term3','semantic_parser.py',2823),
  ('Term3 -> NULL','Term3',1,'p_Term3','semantic_parser.py',2824),
  ('Term3 -> Term4','Term3',1,'p_Term3','semantic_parser.py',2825),
  ('Term4 -> Term4 TIMES RepeatNewline Term5','Term4',4,'p_Term4','semantic_parser.py',2933),
  ('Term4 -> Term4 DIVIDE RepeatNewline Term5','Term4',4,'p_Term4','semantic_parser.py',2934),
  ('Term4 -> Term4 MODULO RepeatNewline Term5','Term4',4,'p_Term4','semantic_parser.py',2935),
  ('Term4 -> Term4 LSHIFT RepeatNewline Term5','Term4',4,'p_Term4','semantic_parser.py',2936),
  ('Term4 -> Term4 RSHIFT RepeatNewline Term5','Term4',4,'p_Term4','semantic_parser.py',2937),
  ('Term4 -> Term4 AND RepeatNewline Term5','Term4',4,'p_Term4','semantic_parser.py',2938),
  ('Term4 -> Term4 ANDNOT RepeatNewline Term5','Term4',4,'p_Term4','semantic_parser.py',2939),
  ('Term4 -> Term5','Term4',1,'p_Term4','semantic_parser.py',2940),
  ('Term5 -> UnaryExp','Term5',1,'p_Term5','semantic_parser.py',3012),
  ('UnaryExp -> PrimaryExpr','UnaryExp',1,'p_UnaryExp','semantic_parser.py',3023),
  ('UnaryExp -> Literal','UnaryExp',1,'p_UnaryExp','semantic_parser.py',3024),
  ('UnaryExp -> UnaryOp RepeatNewline UnaryExp','UnaryExp',3,'p_UnaryExp','semantic_parser.py',3025),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_UnaryOp','semantic_parser.py',3122),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_UnaryOp','semantic_parser.py',3123),
  ('UnaryOp -> LNOT','UnaryOp',1,'p_UnaryOp','semantic_parser.py',3124),
  ('UnaryOp -> TIMES','UnaryOp',1,'p_UnaryOp','semantic_parser.py',3125),
  ('UnaryOp -> AND','UnaryOp',1,'p_UnaryOp','semantic_parser.py',3126),
  ('PrimaryExpr -> OperandName2','PrimaryExpr',1,'p_PrimaryExpr','semantic_parser.py',3134),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_PrimaryExpr','semantic_parser.py',3135),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr','semantic_parser.py',3136),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr','semantic_parser.py',3137),
  ('PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN','PrimaryExpr',4,'p_PrimaryExpr','semantic_parser.py',3138),
  ('Literal -> BasicLit','Literal',1,'p_Literal','semantic_parser.py',3351),
  ('Literal -> CompositeLit','Literal',1,'p_Literal','semantic_parser.py',3352),
  ('BasicLit -> intLit','BasicLit',1,'p_BasicLit','semantic_parser.py',3361),
  ('BasicLit -> floatLit','BasicLit',1,'p_BasicLit','semantic_parser.py',3362),
  ('BasicLit -> stringLit','BasicLit',1,'p_BasicLit','semantic_parser.py',3363),
  ('intLit -> INTEGER','intLit',1,'p_intLit','semantic_parser.py',3393),
  ('floatLit -> FLOAT','floatLit',1,'p_floatLit','semantic_parser.py',3409),
  ('stringLit -> STRINGVAL','stringLit',1,'p_stringLit','semantic_parser.py',3424),
  ('stringLit -> CHARACTER','stringLit',1,'p_stringLit','semantic_parser.py',3425),
  ('CompositeLit -> LiteralType LiteralValue','CompositeLit',2,'p_CompositeLit','semantic_parser.py',3440),
  ('LiteralType -> ArrayType','LiteralType',1,'p_LiteralType','semantic_parser.py',3450),
  ('LiteralType -> StructType','LiteralType',1,'p_LiteralType','semantic_parser.py',3451),
  ('LiteralType -> SliceType','LiteralType',1,'p_LiteralType','semantic_parser.py',3452),
  ('Mytypes -> BOOL','Mytypes',1,'p_Mytypes','semantic_parser.py',3459),
  ('Mytypes -> BYTE','Mytypes',1,'p_Mytypes','semantic_parser.py',3460),
  ('Mytypes -> INT','Mytypes',1,'p_Mytypes','semantic_parser.py',3461),
  ('Mytypes -> UINT8','Mytypes',1,'p_Mytypes','semantic_parser.py',3462),
  ('Mytypes -> UINT16','Mytypes',1,'p_Mytypes','semantic_parser.py',3463),
  ('Mytypes -> UINT32','Mytypes',1,'p_Mytypes','semantic_parser.py',3464),
  ('Mytypes -> UINT64','Mytypes',1,'p_Mytypes','semantic_parser.py',3465),
  ('Mytypes -> INT8','Mytypes',1,'p_Mytypes','semantic_parser.py',3466),
  ('Mytypes -> INT16','Mytypes',1,'p_Mytypes','semantic_parser.py',3467),
  ('Mytypes -> INT32','Mytypes',1,'p_Mytypes','semantic_parser.py',3468),
  ('Mytypes -> INT64','Mytypes',1,'p_Mytypes','semantic_parser.py',3469),
  ('Mytypes -> UINT','Mytypes',1,'p_Mytypes','semantic_parser.py',3470),
  ('Mytypes -> FLOAT32','Mytypes',1,'p_Mytypes','semantic_parser.py',3471),
  ('Mytypes -> FLOAT64','Mytypes',1,'p_Mytypes','semantic_parser.py',3472),
  ('Mytypes -> UINTPTR','Mytypes',1,'p_Mytypes','semantic_parser.py',3473),
  ('Mytypes -> STRING','Mytypes',1,'p_Mytypes','semantic_parser.py',3474),
  ('Mytypes -> ERROR','Mytypes',1,'p_Mytypes','semantic_parser.py',3475),
  ('Types -> Mytypes','Types',1,'p_Types','semantic_parser.py',3488),
  ('Types -> TypeLit','Types',1,'p_Types','semantic_parser.py',3489),
  ('Types -> OperandName','Types',1,'p_Types','semantic_parser.py',3490),
  ('TypeLit -> StructType','TypeLit',1,'p_Typelit','semantic_parser.py',3500),
  ('TypeLit -> ArrayType','TypeLit',1,'p_Typelit','semantic_parser.py',3501),
  ('TypeLit -> PointerType','TypeLit',1,'p_Typelit','semantic_parser.py',3502),
  ('TypeLit -> SliceType','TypeLit',1,'p_Typelit','semantic_parser.py',3503),
  ('SliceType -> LBRACKET RBRACKET Types','SliceType',3,'p_SliceType','semantic_parser.py',3511),
  ('PointerType -> TIMES Types','PointerType',2,'p_PointerType','semantic_parser.py',3525),
  ('StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE','StructType',7,'p_StructType','semantic_parser.py',3540),
  ('M -> empty','M',1,'p_M','semantic_parser.py',3574),
  ('RepeatFieldDecl -> FieldDecl StatementEnd RepeatFieldDecl','RepeatFieldDecl',3,'p_RepeatFieldDecl','semantic_parser.py',3586),
  ('RepeatFieldDecl -> FieldDecl','RepeatFieldDecl',1,'p_RepeatFieldDecl','semantic_parser.py',3587),
  ('RepeatFieldDecl -> empty','RepeatFieldDecl',1,'p_RepeatFieldDecl','semantic_parser.py',3588),
  ('FieldDecl -> IdentifierList Types','FieldDecl',2,'p_FieldDecl','semantic_parser.py',3602),
  ('ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types','ArrayType',5,'p_ArrayType','semantic_parser.py',3637),
  ('ArrayLength -> INTEGER','ArrayLength',1,'p_ArrayLength','semantic_parser.py',3659),
  ('LiteralValue -> LBRACE RepeatNewline RBRACE','LiteralValue',3,'p_LiteralValue','semantic_parser.py',3668),
  ('LiteralValue -> LBRACE RepeatNewline ElementList RBRACE','LiteralValue',4,'p_LiteralValue','semantic_parser.py',3669),
  ('ElementList -> KeyedElement RepeatKeyedElement','ElementList',2,'p_Elementlist','semantic_parser.py',3681),
  ('RepeatKeyedElement -> COMMA RepeatNewline KeyedElement RepeatKeyedElement','RepeatKeyedElement',4,'p_RepeatKeyedElement','semantic_parser.py',3688),
  ('RepeatKeyedElement -> empty','RepeatKeyedElement',1,'p_RepeatKeyedElement','semantic_parser.py',3689),
  ('KeyedElement -> Element','KeyedElement',1,'p_KeyedElement','semantic_parser.py',3701),
  ('Element -> BasicLit','Element',1,'p_Element','semantic_parser.py',3710),
  ('OperandName -> ID','OperandName',1,'p_OperandName','semantic_parser.py',3719),
  ('OperandName2 -> ID','OperandName2',1,'p_OperandName2','semantic_parser.py',3738),
  ('Selector -> PERIOD RepeatNewline ID','Selector',3,'p_Selector','semantic_parser.py',3759),
  ('Index -> LBRACKET RepeatNewline Expression RBRACKET','Index',4,'p_Index','semantic_parser.py',3768),
  ('Arguments -> LPAREN RepeatNewline ExpressionList RPAREN','Arguments',4,'p_Argument','semantic_parser.py',3782),
  ('Arguments -> LPAREN RepeatNewline RPAREN','Arguments',3,'p_Argument','semantic_parser.py',3783),
  ('IdentifierList -> ID','IdentifierList',1,'p_IdentifierList','semantic_parser.py',3799),
  ('IdentifierList -> IdentifierList COMMA RepeatNewline ID','IdentifierList',4,'p_IdentifierList','semantic_parser.py',3800),
  ('MallocExp -> MALLOC LPAREN Expression RPAREN','MallocExp',4,'p_MallocExp','semantic_parser.py',3812),
  ('OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN','OpenFileExp',8,'p_OpenFileExp','semantic_parser.py',3820),
  ('ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN','ReadFileExp',8,'p_ReadFileExp','semantic_parser.py',3829),
  ('WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN','WriteFileExp',8,'p_WriteFileExp','semantic_parser.py',3838),
  ('CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN','CloseFileExp',4,'p_CloseFileExp','semantic_parser.py',3847),
  ('SinExp -> SIN LPAREN Expression RPAREN','SinExp',4,'p_SinExp','semantic_parser.py',3855),
  ('CosExp -> COS LPAREN Expression RPAREN','CosExp',4,'p_CosExp','semantic_parser.py',3863),
  ('empty -> <empty>','empty',0,'p_empty','semantic_parser.py',3871),
  ('terminator -> SEMI','terminator',1,'p_terminator','semantic_parser.py',3878),
  ('StatementEnd -> terminator StatementEnd','StatementEnd',2,'p_StatementEnd','semantic_parser.py',3885),
  ('StatementEnd -> newline StatementEnd','StatementEnd',2,'p_StatementEnd','semantic_parser.py',3886),
  ('StatementEnd -> terminator','StatementEnd',1,'p_StatementEnd','semantic_parser.py',3887),
  ('StatementEnd -> newline','StatementEnd',1,'p_StatementEnd','semantic_parser.py',3888),
  ('RepeatNewline -> newline RepeatNewline','RepeatNewline',2,'p_RepeatNewline','semantic_parser.py',3894),
  ('RepeatNewline -> empty','RepeatNewline',1,'p_RepeatNewline','semantic_parser.py',3895),
]
